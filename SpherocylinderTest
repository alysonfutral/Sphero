import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

/** Tests for Spherocylinder. **/
public class SpherocylinderTest {

    /** Fixture initialization (common initialization for all tests). **/
    @Before public void setUp() {
    }

    /** A test that always fails. **/
    //@Test public void defaultTest() {
    //    Assert.assertEquals("Default test added by jGRASP. Delete "
    //        + "this test once you have added your own.", 0, 1);
    //}

    /** Tests for label. **/
    @Test public void getLabelTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals("Small Example", example1.getLabel());
    }

    /** Tests for label. **/
    @Test public void setLabelTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertTrue(true);
        example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertFalse(false);
    }

    /** Tests for radius. **/
    @Test public void getRadiusTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals(0.5, example1.getRadius(), .01);
    }

    /** Tests for radius. **/
    @Test public void setRadiusTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertTrue(true);
        example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertFalse(false);
    }

    /** Tests for cylinder heights. **/
    @Test public void getCylinderHeightTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals(0.25, example1.getCylinderHeight(), .01);
    }

    /** Tests for cylinder height. **/
    @Test public void setCylinderHeightTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertTrue(true);
        example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertFalse(false);
    }

    /** Tests for circumference. **/
    @Test public void circumferenceTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals(Math.PI, example1.circumference(), .01);
    }

    /** Tests for surface area. **/
    @Test public void surfaceAreaTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals(3.927, example1.surfaceArea(), .01);
    }

    /** Tests for volume. **/
    @Test public void volumeTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals(0.7199483164476609, example1.volume(), .01);
    }

    /** Tests for toString. **/
    @Test public void toStringTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Spherocylinder example2 = new Spherocylinder(" Medium Example ", 10.8, 10.1);
        Spherocylinder example3 = new Spherocylinder("Large Example", 98.32, 99.0);
        Assert.assertTrue(example1.toString().contains("\"Small Example\""));
        Assert.assertTrue(example2.toString().contains("\"Medium Example\""));
        Assert.assertTrue(example3.toString().contains("\"Large Example\""));
    }

    /** Tests for count. **/
    @Test public void getCountTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals(17, example1.getCount());
    }

    /** Tests for reset count. **/
    @Test public void getResetCount() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        example1.resetCount();
        Assert.assertEquals(0, example1.getCount());
    }

    /** Tests for equals object. **/
    @Test public void equalsTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Spherocylinder example2 = new Spherocylinder("Medium Example", 10.8, 10.1);
        Assert.assertEquals(false, example1.equals(example2));
    }

    /** Tests for hash code. **/
    @Test public void hashCodeTest() {
        Spherocylinder example1 = new Spherocylinder("Small Example", 0.5, 0.25);
        Assert.assertEquals(0, example1.hashCode());
    }
}
